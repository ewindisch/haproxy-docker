#!/bin/bash

PIDFILE=/tmp/ucarp.pid
trap "shutdown" SIGINT SIGTERM SIGCHLD

shutdown() {
  RET=$1
  echo "Shutting down"
  PID=`cat $PIDFILE`
  if [ -z "$PID" ]
  then
    echo "ucarp pid not found"
    exit 99
  fi

  echo "Demoting master"
  kill -USR2 $PID
  sleep 1
  echo "Sending TERM to ucarp"
  kill $PID
  sleep 1
  echo "Sending KILL to ucarp" # we need to make sure everything is dead before
  kill -9 $PID                 # ucarp might promote itself to master afer 3s again
  exit $RET
}

export VIP=$1
export PASS=$2
shift; shift
export IPS=$@
export DEV=${DEV-eth1}

if [ -z "$PASS" ]
then
  echo "$0 virtual-ip password"
  exit 1
fi

# Generate keys if not provided
[ -f keys/dhparam.pem ] ||
  openssl dhparam -out keys/dhparam.pem 2048

if [ ! -f keys/default.pem ]
then
  openssl genrsa -out keys/server-key.pem 2048
  openssl req -new -key keys/server-key.pem -out keys/server-csr.pem -subj /CN=*/
  openssl x509 -req -in keys/server-csr.pem -out keys/server-cert.pem -signkey keys/server-key.pem -days 3650
  cat keys/server-cert.pem keys/server-key.pem > keys/default.pem
fi

# Check is haproxy.cfg is valid before we start ucarp
haproxy -c -f /haproxy/haproxy.cfg

( fghack /usr/sbin/haproxy -f /haproxy/haproxy.cfg; shutdown 1 ) &

/haproxy/scripts/ucarp &
echo $! > $PIDFILE
wait $!
